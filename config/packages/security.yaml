security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        #in_memory:
        #    memory:
         #       users:
        #            admin:
         #               password: $2y$12$1EaSJqzKEP.YjpT7dhJAB.ZxA/LeK9FxajwLmT8zUW17hkCPoQSDS
        #                roles: 'ROLE_ADMIN'
        db_user:
            entity:
                class: App\Entity\User
                property: email

    encoders:
        #Symfony\Component\Security\Core\User\User:
        #    algorithm: bcrypt
        #    cost: 12
        App\Entity\User:
            algorithm: 'bcrypt'
            cost:      12
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: ~
            http-basic: ~
            form_login:
                check_path: login
            logout:
                path: /logout
                target: /login
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
        #secured_area:
           # logout:
            #    path: /logout
           #     target: /

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # require ROLE_ADMIN for /admin
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/profile, roles: ROLE_USER }
